CREATE TABLE [VENDEDOR]
(
    [COD_VENDEDOR] INTEGER NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_VENDEDOR] PRIMARY KEY ([COD_VENDEDOR])
);
CREATE UNIQUE INDEX [IPK_VENDEDOR] ON [VENDEDOR]([COD_VENDEDOR]);

CREATE TABLE [CLIENTE]
(
    [COD_CLIENTE] INTEGER  NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_CLIENTE] PRIMARY KEY ([COD_CLIENTE])
);
CREATE UNIQUE INDEX [IPK_CLIENTE] ON [CLIENTE]([COD_CLIENTE]);

CREATE TABLE [FORNECEDOR]
(
    [COD_FORNECEDOR] INTEGER  NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_FORNECEDOR] PRIMARY KEY ([COD_FORNECEDOR])
);
CREATE UNIQUE INDEX [IPK_FORNECEDOR] ON [FORNECEDOR]([COD_FORNECEDOR]);

CREATE TABLE [SITUACAO_PEDIDO]
(
    [COD_SITUACAO_PEDIDO] INTEGER  NOT NULL,
    [STATUS_PEDIDO] NVARCHAR(160)  NOT NULL,
    [STATUS_PAGAMENTO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_SITUACAO_PEDIDO] PRIMARY KEY ([COD_SITUACAO_PEDIDO])
);
CREATE UNIQUE INDEX [IPK_SITUACAO_PEDIDO] ON [SITUACAO_PEDIDO]([COD_SITUACAO_PEDIDO]);

CREATE TABLE [TIPO_PRODUTO]
(
    [COD_TIPO_PRODUTO] INTEGER  NOT NULL,
    [DES_TIPO_PRODUTO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_TIPO_PRODUTO] PRIMARY KEY ([COD_TIPO_PRODUTO])
);
CREATE UNIQUE INDEX [IPK_TIPO_PRODUTO] ON [TIPO_PRODUTO]([COD_TIPO_PRODUTO]);

CREATE TABLE [FORMA_PAGAMENTO]
(
    [COD_FORMA_PAGAMENTO] INTEGER  NOT NULL,
    [DES_FORMA_PAGAMENTO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_FORMA_PAGAMENTO] PRIMARY KEY ([COD_FORMA_PAGAMENTO])
);
CREATE UNIQUE INDEX [IPK_FORMA_PAGAMENTO] ON [FORMA_PAGAMENTO]([COD_FORMA_PAGAMENTO]);


CREATE TABLE [PEDIDO_VENDA]
(
    [COD_PEDIDO_VENDA] INTEGER  NOT NULL,
    [DATA_PEDIDO] DATETIME NOT NULL,
    [VLR_PEDIDO_VENDA] FLOAT(15,2)  NOT NULL,
    [COD_VENDEDOR] INTEGER  NOT NULL,
    [COD_CLIENTE] INTEGER  NOT NULL,
    [COD_SITUACAO_PEDIDO] INTEGER  NOT NULL,
    [COD_FORMA_PAGAMENTO] INTEGER NOT NULL,
    CONSTRAINT [PK_PEDIDO_VENDA] PRIMARY KEY ([COD_PEDIDO_VENDA]),
    CONSTRAINT [FK_VENDEDOR] FOREIGN KEY ([COD_VENDEDOR]) REFERENCES VENDEDOR(COD_VENDEDOR),
    CONSTRAINT [FK_CLIENTE] FOREIGN KEY ([COD_CLIENTE]) REFERENCES CLIENTE(COD_CLIENTE),
    CONSTRAINT [FK_SITUACAO_PEDIDO] FOREIGN KEY ([COD_SITUACAO_PEDIDO]) REFERENCES SITUACAO_PEDIDO(COD_SITUACAO_PEDIDO),
    CONSTRAINT [FK_FORMA_PAGAMENTO] FOREIGN KEY ([COD_FORMA_PAGAMENTO]) REFERENCES FORMA_PAGAMENTO(COD_FORMA_PAGAMENTO)
);

select * from PEDIDO_VENDA pv ;

CREATE UNIQUE INDEX [IPK_PEDIDO_VENDA] ON [PEDIDO_VENDA]([COD_PEDIDO_VENDA]);

CREATE TABLE [PRODUTO]
(
    [COD_PRODUTO] INTEGER  NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [VLR_PRODUTO_COMPRA] FLOAT(15,2)  NOT NULL,
    [VLR_PRODUTO_VENDA] FLOAT(15,2)  NOT NULL,
    [COD_TIPO_PRODUTO] INTEGER  NOT NULL,
    CONSTRAINT [PK_PRODUTO] PRIMARY KEY ([COD_PRODUTO]),
    CONSTRAINT [FK_TIPO_PRODUTO] FOREIGN KEY ([COD_TIPO_PRODUTO]) REFERENCES TIPO_PRODUTO(COD_TIPO_PRODUTO)
  
);
CREATE UNIQUE INDEX [IPK_PRODUTO] ON [PRODUTO]([COD_PRODUTO]);

CREATE TABLE [COTACAO]
(
    [COD_COTACAO] INTEGER  NOT NULL,
    [VLR_COTACAO] FLOAT(15,2)  NOT NULL,
    [UNIDADE_MEDIDA] NVARCHAR(160)  NOT NULL,
    [COD_PRODUTO] INTEGER  NOT NULL,
    [COD_FORNECEDOR] INTEGER  NOT NULL,
    CONSTRAINT [PK_COTACAO] PRIMARY KEY ([COD_COTACAO]),
    CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO),
    CONSTRAINT [FK_FORNECEDOR] FOREIGN KEY ([COD_FORNECEDOR]) REFERENCES FORNECEDOR(COD_FORNECEDOR)
  
);
CREATE UNIQUE INDEX [IPK_COTACAO] ON [COTACAO]([COD_COTACAO]);

CREATE TABLE [ITEM_PEDIDO_VENDA]
(
    [COD_ITEM_PEDIDO_VENDA] INTEGER  NOT NULL,
    [QTD_ITEM_PEDIDO_VENDA] FLOAT(15,2)  NOT NULL,
    [COD_PEDIDO_VENDA] INTEGER  NOT NULL,
    [COD_PRODUTO] INTEGER  NOT NULL,
    CONSTRAINT [PK_ITEM_PEDIDO_VENDA] PRIMARY KEY ([COD_ITEM_PEDIDO_VENDA]),
    CONSTRAINT [FK_COD_PEDIDO_VENDA] FOREIGN KEY ([COD_PEDIDO_VENDA]) REFERENCES PEDIDO_VENDA(COD_PEDIDO_VENDA),
    CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO)
  
);
CREATE UNIQUE INDEX [IPK_ITEM_PEDIDO_VENDA] ON [ITEM_PEDIDO_VENDA]([COD_ITEM_PEDIDO_VENDA]);

CREATE TABLE [ITEM_PEDIDO_COMPRA]
(
    [COD_ITEM_PEDIDO_COMPRA] INTEGER  NOT NULL,
    [QTD_ITEM_PEDIDO_COMPRA] FLOAT(15,2)  NOT NULL,
    [COD_PRODUTO] INTEGER  NOT NULL,
    [COD_PEDIDO_COMPRA] INTEGER  NOT NULL,
    CONSTRAINT [PK_ITEM_PEDIDO_COMPRA] PRIMARY KEY ([COD_ITEM_PEDIDO_COMPRA]),
    CONSTRAINT [FK_COD_PEDIDO_COMPRA] FOREIGN KEY ([COD_PEDIDO_COMPRA]) REFERENCES PEDIDO_COMPRA(COD_PEDIDO_COMPRA),
    CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO)
  
);
CREATE UNIQUE INDEX [IPK_ITEM_PEDIDO_COMPRA] ON [ITEM_PEDIDO_COMPRA]([COD_ITEM_PEDIDO_COMPRA]);

CREATE TABLE [PEDIDO_COMPRA]
(
    [COD_PEDIDO_COMPRA] INTEGER  NOT NULL,
    [VLR_PEDIDO_COMPRA] FLOAT(15,2)  NOT NULL,
    [COD_FORNECEDOR] INTEGER  NOT NULL,
    CONSTRAINT [PK_PEDIDO_COMPRA] PRIMARY KEY ([COD_PEDIDO_COMPRA]),
    CONSTRAINT [FK_FORNECEDOR] FOREIGN KEY ([COD_FORNECEDOR]) REFERENCES FORNECEDOR(COD_FORNECEDOR)
);
CREATE UNIQUE INDEX [IPK_PEDIDO_COMPRA] ON [PEDIDO_COMPRA]([COD_PEDIDO_COMPRA]);

-- Inserindo um registro na tabela CLIENTE
INSERT INTO CLIENTE (COD_CLIENTE, NOME, TELEFONE, ENDERECO)
VALUES (3, 'JENNIFER', '31994533390', 'R. LK 161');  

-- Inserindo um registro na tabela CLIENTE
INSERT INTO CLIENTE (COD_CLIENTE, NOME, TELEFONE, ENDERECO)
VALUES (2, 'JOYCE', '31998755541', 'R. LU 11');

-- Inserindo um registro na tabela VENDEDOR
INSERT INTO VENDEDOR (COD_VENDEDOR, NOME, TELEFONE, ENDERECO)
VALUES (1, 'ANA', '31999999999', 'R. AB 16');

-- Inserindo um registro na tabela VENDEDOR
INSERT INTO VENDEDOR (COD_VENDEDOR, NOME, TELEFONE, ENDERECO)
VALUES (2, 'LEO', '31999777999', 'R. AC 516');

-- Inserindo um registro na tabela FORNECEDOR
INSERT INTO FORNECEDOR (COD_FORNECEDOR, NOME, TELEFONE, ENDERECO)
VALUES (1, 'DAVI', '31997444541', 'R. EU 71');

-- Inserindo um registro na tabela FORNECEDOR
INSERT INTO FORNECEDOR (COD_FORNECEDOR, NOME, TELEFONE, ENDERECO)
VALUES (2, 'ELIZA', '31978444541', 'R. TATU 89');

-- Inserindo um registro na tabela TIPO_PRODUTO
INSERT INTO TIPO_PRODUTO (COD_TIPO_PRODUTO, DES_TIPO_PRODUTO)
VALUES (1, 'PIZZAS');

-- Inserindo um registro na tabela TIPO_PRODUTO
INSERT INTO TIPO_PRODUTO (COD_TIPO_PRODUTO, DES_TIPO_PRODUTO)
VALUES (2, 'BEBIDAS');

-- Inserindo um registro na tabela PRODUTO
INSERT INTO PRODUTO (COD_PRODUTO, NOME, VLR_PRODUTO_COMPRA, VLR_PRODUTO_VENDA, COD_TIPO_PRODUTO)
VALUES (1, 'PIZZA DE FRANGO', 50.00, 70.00, 1);

-- Inserindo um registro na tabela PRODUTO
INSERT INTO PRODUTO (COD_PRODUTO, NOME, VLR_PRODUTO_COMPRA, VLR_PRODUTO_VENDA, COD_TIPO_PRODUTO)
VALUES (2, 'COCA-COLA', 5.00, 9.00, 2);
select * from PRODUTO
-- Inserindo um registro na tabela COTAÇÃO
INSERT INTO COTACAO (COD_COTACAO, VLR_COTACAO, UNIDADE_MEDIDA, COD_PRODUTO, COD_FORNECEDOR)
VALUES (1, 50.00, 'KG', 1, 1);

-- Inserindo um registro na tabela COTAÇÃO
INSERT INTO COTACAO (COD_COTACAO, VLR_COTACAO, UNIDADE_MEDIDA, COD_PRODUTO, COD_FORNECEDOR)
VALUES (2, 75.00, 'LITROS', 2, 2);

-- Inserindo um registro na tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, DES_FORMA_PAGAMENTO)
VALUES (1, 'CRÉDITO');

-- Inserindo um registro na tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, DES_FORMA_PAGAMENTO)
VALUES (2, 'DÉBITO');

-- Inserindo um registro na tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, DES_FORMA_PAGAMENTO)
VALUES (3, 'DINHEIRO');

-- Inserindo um registro na tabela SITUAÇÃO_PEDIDO
INSERT INTO SITUACAO_PEDIDO (COD_SITUACAO_PEDIDO, STATUS_PEDIDO, STATUS_PAGAMENTO)
VALUES (1, 'PREPARANDO', 'PAGO');

-- Inserindo um registro na tabela SITUAÇÃO_PEDIDO
INSERT INTO SITUACAO_PEDIDO (COD_SITUACAO_PEDIDO, STATUS_PEDIDO, STATUS_PAGAMENTO)
VALUES (2, 'ENTREGUE', 'PAGO');

-- Inserindo um registro na tabela SITUAÇÃO_PEDIDO
INSERT INTO SITUACAO_PEDIDO (COD_SITUACAO_PEDIDO, STATUS_PEDIDO, STATUS_PAGAMENTO)
VALUES (3, 'CANCELADO', 'REEMBOLSO');

-- Inserindo um registro na tabela ITEM_PEDIDO_COMPRA
INSERT INTO ITEM_PEDIDO_COMPRA (COD_ITEM_PEDIDO_COMPRA, QTD_ITEM_PEDIDO_COMPRA, COD_PRODUTO, COD_PEDIDO_COMPRA)
VALUES (1, 10, 2, 1);

-- Inserindo um registro na tabela ITEM_PEDIDO_COMPRA
INSERT INTO ITEM_PEDIDO_COMPRA (COD_ITEM_PEDIDO_COMPRA, QTD_ITEM_PEDIDO_COMPRA, COD_PRODUTO, COD_PEDIDO_COMPRA)
VALUES (2, 100, 2, 1);

-- Inserindo um registro na tabela ITEM_PEDIDO_VENDA
INSERT INTO ITEM_PEDIDO_VENDA (COD_ITEM_PEDIDO_VENDA, QTD_ITEM_PEDIDO_VENDA, COD_PEDIDO_VENDA,  COD_PRODUTO)
VALUES (1, 10, 2, 1);

-- Inserindo um registro na tabela ITEM_PEDIDO_VENDA
INSERT INTO ITEM_PEDIDO_VENDA (COD_ITEM_PEDIDO_VENDA, QTD_ITEM_PEDIDO_VENDA, COD_PEDIDO_VENDA,  COD_PRODUTO)
VALUES (2, 5, 1, 1);

-- Inserindo um registro na tabela PEDIDO_COMPRA
INSERT INTO PEDIDO_COMPRA (COD_PEDIDO_COMPRA, VLR_PEDIDO_COMPRA, COD_FORNECEDOR)
VALUES (1, 1000.00, 1);

-- Inserindo um registro na tabela PEDIDO_COMPRA
INSERT INTO PEDIDO_COMPRA (COD_PEDIDO_COMPRA, VLR_PEDIDO_COMPRA, COD_FORNECEDOR)
VALUES (2, 525.00, 2);

-- Inserindo um registro na tabela PEDIDO_VENDA
INSERT INTO PEDIDO_VENDA (COD_PEDIDO_VENDA, DATA_PEDIDO, VLR_PEDIDO_VENDA, COD_VENDEDOR, COD_CLIENTE, COD_SITUACAO_PEDIDO, COD_FORMA_PAGAMENTO)
VALUES (7, '2023-25-10 27:00:00', 100.50, 1, 2, 1, 3);

-- Inserindo um registro na tabela PEDIDO_VENDA
INSERT INTO PEDIDO_VENDA (COD_PEDIDO_VENDA, DATA_PEDIDO, VLR_PEDIDO_VENDA, COD_VENDEDOR, COD_CLIENTE, COD_SITUACAO_PEDIDO, COD_FORMA_PAGAMENTO)
VALUES (2, '2023-27-10 27:00:00', 180.75, 2, 2, 1, 2);


-- SELECT DE UMA INFORMAÇÃO DE CADA TABELA
SELECT * FROM CLIENTE WHERE COD_CLIENTE LIKE '%3';
SELECT * FROM VENDEDOR WHERE NOME LIKE 'ANA%';
SELECT * FROM FORNECEDOR WHERE NOME LIKE '%D%';
SELECT * FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO LIKE '1';
SELECT * FROM COTACAO WHERE VLR_COTACAO LIKE 50.00;
SELECT * FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO LIKE '2';
SELECT * FROM SITUACAO_PEDIDO WHERE COD_SITUACAO_PEDIDO LIKE '3';
SELECT * FROM ITEM_PEDIDO_COMPRA WHERE COD_ITEM_PEDIDO_COMPRA LIKE '1';
SELECT * FROM ITEM_PEDIDO_VENDA WHERE COD_ITEM_PEDIDO_VENDA LIKE '1';
SELECT * FROM PEDIDO_COMPRA WHERE COD_PEDIDO_COMPRA LIKE '1';
SELECT * FROM PEDIDO_VENDA WHERE COD_PEDIDO_VENDA LIKE '1';

select * from CLIENTE c 
-- UPDATE DE UMA INFORMAÇÃO DE CADA TABELA
UPDATE CLIENTE SET NOME = 'FLAVIA' WHERE COD_CLIENTE  = 1;
UPDATE VENDEDOR SET NOME = 'ANA PAULA' WHERE COD_VENDEDOR = 1;
UPDATE FORNECEDOR SET NOME = 'JOÃO' WHERE COD_FORNECEDOR  = 1;
UPDATE TIPO_PRODUTO SET DES_TIPO_PRODUTO = 'MASSAS' WHERE COD_TIPO_PRODUTO = 1;
UPDATE COTACAO SET VLR_COTACAO = 200 WHERE COD_COTACAO = 1;
UPDATE FORMA_PAGAMENTO SET DES_FORMA_PAGAMENTO = 'CRÉDITO A VISTA' WHERE COD_FORMA_PAGAMENTO = 1;
UPDATE SITUACAO_PEDIDO SET STATUS_PEDIDO= 'DEVOLVIDO' WHERE COD_SITUACAO_PEDIDO = 3;
UPDATE ITEM_PEDIDO_COMPRA SET QTD_ITEM_PEDIDO_COMPRA= 300 WHERE COD_ITEM_PEDIDO_COMPRA = 1;
UPDATE ITEM_PEDIDO_VENDA SET QTD_ITEM_PEDIDO_VENDA = 400 WHERE COD_ITEM_PEDIDO_VENDA = 1;
UPDATE PEDIDO_COMPRA SET VLR_PEDIDO_COMPRA = 79.90 WHERE COD_PEDIDO_COMPRA = 1;
UPDATE PEDIDO_VENDA SET VLR_PEDIDO_VENDA = 159.95 WHERE COD_PEDIDO_VENDA = 1;


select * from cliente
-- DELETE DE UMA INFORMAÇÃO DE CADA TABELA
DELETE FROM CLIENTE WHERE COD_CLIENTE  = 2;
DELETE FROM VENDEDOR WHERE COD_VENDEDOR = 2;
DELETE FROM FORNECEDOR WHERE COD_FORNECEDOR = 2;
DELETE FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO = 2;
DELETE FROM COTACAO WHERE COD_COTACAO = 1;
DELETE FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO = 2;
DELETE FROM SITUACAO_PEDIDO WHERE COD_SITUACAO_PEDIDO = 1;
DELETE FROM ITEM_PEDIDO_COMPRA WHERE COD_ITEM_PEDIDO_COMPRA = 1;
DELETE FROM ITEM_PEDIDO_VENDA WHERE COD_ITEM_PEDIDO_VENDA = 1;
DELETE FROM PEDIDO_COMPRA WHERE COD_PEDIDO_COMPRA = 1;
DELETE FROM PEDIDO_VENDA WHERE COD_PEDIDO_VENDA = 1;


select * from PEDIDO_VENDA PV

-- INNER JOIN
-- 0 - QUERO RECUPERAR TODOS OS PEDIDOS FEITOS NA PIZZARIA ATÉ O MOMENTO
SELECT PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS NOME_CLIENTE, 
V.NOME AS NOME_VENDEDOR, FP.DES_FORMA_PAGAMENTO, P.NOME AS NOME_PRODUTO, 
TP.DES_TIPO_PRODUTO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO
INNER JOIN ITEM_PEDIDO_VENDA IPV ON IPV.COD_PEDIDO_VENDA = PV.COD_PEDIDO_VENDA
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO;

-- 1 - QUERO BUSCAR TODOS OS FORNECEDORES CADASTRADOS X PRODUTOS COMPRADOS
SELECT PC.VLR_PEDIDO_COMPRA, F.NOME AS NOME_FORNECEDOR,
P.VLR_PRODUTO_COMPRA, P.NOME AS NOME_PRODUTO
FROM PEDIDO_COMPRA pc
INNER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = PC.COD_FORNECEDOR
INNER JOIN ITEM_PEDIDO_COMPRA IPC ON IPC.COD_PEDIDO_COMPRA = PC.COD_PEDIDO_COMPRA
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPC.COD_PRODUTO;

-- 2 - QUERO TODAS AS COTAÇÕES REALIZADAS
SELECT C.VLR_COTACAO, F.NOME AS NOME_FORNECEDOR, P.NOME AS NOME_PRODUTO
FROM COTACAO C
INNER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = C.COD_FORNECEDOR
INNER JOIN PRODUTO P ON P.COD_PRODUTO = C.COD_PRODUTO;

select * from PRODUTO p 

-- 3 - QUERO TODOS OS PRODUTOS VENDIDOS
SELECT IPV. COD_PRODUTO, P.NOME AS NOME_PRODUTO, QTD_ITEM_PEDIDO_VENDA
FROM ITEM_PEDIDO_VENDA IPV
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO;

-- 4 - QUERO TODAS AS SITUAÇÕES DOS PEDIDOS DE VENDAS
SELECT PV.COD_PEDIDO_VENDA, PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS
NOME_CLIENTE, SP.STATUS_PEDIDO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON PV.COD_CLIENTE = C.COD_CLIENTE
INNER JOIN SITUACAO_PEDIDO SP ON PV.COD_SITUACAO_PEDIDO = SP.COD_SITUACAO_PEDIDO;

-- 5 - QUERO TODAS AS COTAÇÕES REALIZADAS COM UNIDADE DE MEDIDA
SELECT C.VLR_COTACAO, C.UNIDADE_MEDIDA, F.NOME AS NOME_FORNECEDOR
FROM COTACAO C
INNER JOIN FORNECEDOR F ON C.COD_FORNECEDOR = F.COD_FORNECEDOR;

-- LEFT JOIN
-- 0 - QUERO TRAZER TODOS OS VENNDEDORES CADASTRADOS
SELECT V.NOME AS NOME_VENDEDOR, PV.COD_PEDIDO_VENDA, PV.DATA_PEDIDO
FROM VENDEDOR V
LEFT JOIN PEDIDO_VENDA PV ON V.COD_VENDEDOR = PV.COD_VENDEDOR;

-- RIGHT OUTER JOIN
-- 1 - QUERO BUSCAR TODOS OS FORNECEDORES CADASTRADOS MESMO SEM COMPRAS REALIZADAS
SELECT PC.VLR_PEDIDO_COMPRA, F.NOME AS NOME_FORNECEDOR,
P.VLR_PRODUTO_COMPRA, P.NOME AS NOME_PRODUTO
FROM PEDIDO_COMPRA pc
RIGHT OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = PC.COD_FORNECEDOR
RIGHT OUTER JOIN ITEM_PEDIDO_COMPRA IPC ON IPC.COD_PEDIDO_COMPRA =
PC.COD_PEDIDO_COMPRA
RIGHT OUTER JOIN PRODUTO P ON P.COD_PRODUTO = IPC.COD_PRODUTO;

-- 2 - QUERO TODAS AS COTAÇÕES REALIZADAS MESMO SEM SEREM EFETIVADAS
SELECT C.VLR_COTACAO, F.NOME AS NOME_FORNECEDOR, P.NOME AS NOME_PRODUTO
FROM COTACAO C
RIGHT OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = C.COD_FORNECEDOR
RIGHT OUTER JOIN PRODUTO P ON P.COD_PRODUTO = C.COD_PRODUTO;

-- 3 - QUERO TODOS OS PEDIDOS DE VENDAS MESMO SEM VENDEDOR CADASTRADO
SELECT V.NOME AS NOME_VENDEDOR, PV.COD_PEDIDO_VENDA, PV.DATA_PEDIDO
FROM PEDIDO_VENDA PV
RIGHT JOIN VENDEDOR V ON PV.COD_VENDEDOR = V.COD_VENDEDOR;

--FULL OUTER JOIN
-- 1 - QUERO BUSCAR TODOS OS FORNECEDORES CADASTRADOS COM TODOS OS PEDIDOS DE COMPRA
SELECT PC.VLR_PEDIDO_COMPRA, F.NOME AS NOME_FORNECEDOR,
P.VLR_PRODUTO_COMPRA, P.NOME AS NOME_PRODUTO
FROM PEDIDO_COMPRA pc
FULL OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = PC.COD_FORNECEDOR
FULL OUTER JOIN ITEM_PEDIDO_COMPRA IPC ON IPC.COD_PEDIDO_COMPRA =
PC.COD_PEDIDO_COMPRA
FULL OUTER JOIN PRODUTO P ON P.COD_PRODUTO = IPC.COD_PRODUTO;

-- 2 - QUERO TODAS AS COTAÇÕES REALIZADAS COM TODOS OS PRODUTOS
SELECT C.VLR_COTACAO, F.NOME AS NOME_FORNECEDOR, P.NOME AS NOME_PRODUTO
FROM COTACAO C
FULL OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = C.COD_FORNECEDOR
FULL OUTER JOIN PRODUTO P ON P.COD_PRODUTO = C.COD_PRODUTO;

-- Exemplo Order By 1
SELECT PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS NOME_CLIENTE, 
V.NOME AS NOME_VENDEDOR, FP.DES_FORMA_PAGAMENTO, P.NOME AS NOME_PRODUTO, 
TP.DES_TIPO_PRODUTO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
INNER JOIN ITEM_PEDIDO_VENDA IPV ON IPV.COD_PEDIDO_VENDA = PV.COD_PEDIDO_VENDA
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY PV.VLR_PEDIDO_VENDA DESC;

-- Exemplo Order By 2
SELECT PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS NOME_CLIENTE, 
V.NOME AS NOME_VENDEDOR, FP.DES_FORMA_PAGAMENTO, P.NOME AS NOME_PRODUTO, 
TP.DES_TIPO_PRODUTO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
INNER JOIN ITEM_PEDIDO_VENDA IPV ON IPV.COD_PEDIDO_VENDA = PV.COD_PEDIDO_VENDA
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY P.NOME ASC;

-- Exemplo Group By 1
SELECT FP.DES_FORMA_PAGAMENTO, SUM(PV.VLR_PEDIDO_VENDA) AS TOTAL_VENDAS
FROM PEDIDO_VENDA PV
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
GROUP BY FP.DES_FORMA_PAGAMENTO;

-- Exemplo Group By 2
SELECT TP.DES_TIPO_PRODUTO, COUNT(P.COD_PRODUTO) AS TOTAL_PRODUTOS
FROM PRODUTO P
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
GROUP BY TP.DES_TIPO_PRODUTO;

-- QUERO RECUPERAR A QUANTIDADE DE PEDIDOS E O SOMATÓRIO DO VALOR GASTO POR TODOS OS CLIENTES DA PIZZARIA
SELECT C.COD_CLIENTE, C.NOME AS NOME_CLIENTE, 
COUNT(PV.COD_PEDIDO_VENDA) AS QTD_PEDIDOS_CLIENTE, 
SUM(PV.VLR_PEDIDO_VENDA) AS VALOR_GASTO_CLIENTE
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
GROUP BY PV.COD_CLIENTE
ORDER BY PV.VLR_PEDIDO_VENDA ASC

-- QUERO RECUPERAR OS VENDEDORES QUE MAIS VENDERAM PIZZA
SELECT V.COD_VENDEDOR, V.NOME AS NOME_VENDEDOR, 
COUNT(PV.COD_PEDIDO_VENDA) AS QTD_PEDIDOS_ATENDIDOS,
SUM(PV.VLR_PEDIDO_VENDA) AS VALOR_TOTAL_VENDIDO
FROM PEDIDO_VENDA PV
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR 
WHERE PV.DATA_PEDIDO BETWEEN '2023-01-01 00:00:00' AND '2023-31-12 00:00:00'
GROUP BY V.COD_VENDEDOR
ORDER BY QTD_PEDIDOS_ATENDIDOS DESC

CREATE TABLE [VENDEDOR]
(
    [COD_VENDEDOR] INTEGER NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_VENDEDOR] PRIMARY KEY ([COD_VENDEDOR])
);
CREATE UNIQUE INDEX [IPK_VENDEDOR] ON [VENDEDOR]([COD_VENDEDOR]);

CREATE TABLE [CLIENTE]
(
    [COD_CLIENTE] INTEGER  NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_CLIENTE] PRIMARY KEY ([COD_CLIENTE])
);
CREATE UNIQUE INDEX [IPK_CLIENTE] ON [CLIENTE]([COD_CLIENTE]);

CREATE TABLE [FORNECEDOR]
(
    [COD_FORNECEDOR] INTEGER  NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [TELEFONE] NVARCHAR(160)  NOT NULL,
    [ENDERECO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_FORNECEDOR] PRIMARY KEY ([COD_FORNECEDOR])
);
CREATE UNIQUE INDEX [IPK_FORNECEDOR] ON [FORNECEDOR]([COD_FORNECEDOR]);

CREATE TABLE [SITUACAO_PEDIDO]
(
    [COD_SITUACAO_PEDIDO] INTEGER  NOT NULL,
    [STATUS_PEDIDO] NVARCHAR(160)  NOT NULL,
    [STATUS_PAGAMENTO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_SITUACAO_PEDIDO] PRIMARY KEY ([COD_SITUACAO_PEDIDO])
);
CREATE UNIQUE INDEX [IPK_SITUACAO_PEDIDO] ON [SITUACAO_PEDIDO]([COD_SITUACAO_PEDIDO]);

CREATE TABLE [TIPO_PRODUTO]
(
    [COD_TIPO_PRODUTO] INTEGER  NOT NULL,
    [DES_TIPO_PRODUTO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_TIPO_PRODUTO] PRIMARY KEY ([COD_TIPO_PRODUTO])
);
CREATE UNIQUE INDEX [IPK_TIPO_PRODUTO] ON [TIPO_PRODUTO]([COD_TIPO_PRODUTO]);

CREATE TABLE [FORMA_PAGAMENTO]
(
    [COD_FORMA_PAGAMENTO] INTEGER  NOT NULL,
    [DES_FORMA_PAGAMENTO] NVARCHAR(160)  NOT NULL,
    CONSTRAINT [PK_FORMA_PAGAMENTO] PRIMARY KEY ([COD_FORMA_PAGAMENTO])
);
CREATE UNIQUE INDEX [IPK_FORMA_PAGAMENTO] ON [FORMA_PAGAMENTO]([COD_FORMA_PAGAMENTO]);


CREATE TABLE [PEDIDO_VENDA]
(
    [COD_PEDIDO_VENDA] INTEGER  NOT NULL,
    [DATA_PEDIDO] DATETIME NOT NULL,
    [VLR_PEDIDO_VENDA] FLOAT(15,2)  NOT NULL,
    [COD_VENDEDOR] INTEGER  NOT NULL,
    [COD_CLIENTE] INTEGER  NOT NULL,
    [COD_SITUACAO_PEDIDO] INTEGER  NOT NULL,
    [COD_FORMA_PAGAMENTO] INTEGER NOT NULL,
    CONSTRAINT [PK_PEDIDO_VENDA] PRIMARY KEY ([COD_PEDIDO_VENDA]),
    CONSTRAINT [FK_VENDEDOR] FOREIGN KEY ([COD_VENDEDOR]) REFERENCES VENDEDOR(COD_VENDEDOR),
    CONSTRAINT [FK_CLIENTE] FOREIGN KEY ([COD_CLIENTE]) REFERENCES CLIENTE(COD_CLIENTE),
    CONSTRAINT [FK_SITUACAO_PEDIDO] FOREIGN KEY ([COD_SITUACAO_PEDIDO]) REFERENCES SITUACAO_PEDIDO(COD_SITUACAO_PEDIDO),
    CONSTRAINT [FK_FORMA_PAGAMENTO] FOREIGN KEY ([COD_FORMA_PAGAMENTO]) REFERENCES FORMA_PAGAMENTO(COD_FORMA_PAGAMENTO)
);

select * from PEDIDO_VENDA pv ;

CREATE UNIQUE INDEX [IPK_PEDIDO_VENDA] ON [PEDIDO_VENDA]([COD_PEDIDO_VENDA]);

CREATE TABLE [PRODUTO]
(
    [COD_PRODUTO] INTEGER  NOT NULL,
    [NOME] NVARCHAR(160)  NOT NULL,
    [VLR_PRODUTO_COMPRA] FLOAT(15,2)  NOT NULL,
    [VLR_PRODUTO_VENDA] FLOAT(15,2)  NOT NULL,
    [COD_TIPO_PRODUTO] INTEGER  NOT NULL,
    CONSTRAINT [PK_PRODUTO] PRIMARY KEY ([COD_PRODUTO]),
    CONSTRAINT [FK_TIPO_PRODUTO] FOREIGN KEY ([COD_TIPO_PRODUTO]) REFERENCES TIPO_PRODUTO(COD_TIPO_PRODUTO)
  
);
CREATE UNIQUE INDEX [IPK_PRODUTO] ON [PRODUTO]([COD_PRODUTO]);

CREATE TABLE [COTACAO]
(
    [COD_COTACAO] INTEGER  NOT NULL,
    [VLR_COTACAO] FLOAT(15,2)  NOT NULL,
    [UNIDADE_MEDIDA] NVARCHAR(160)  NOT NULL,
    [COD_PRODUTO] INTEGER  NOT NULL,
    [COD_FORNECEDOR] INTEGER  NOT NULL,
    CONSTRAINT [PK_COTACAO] PRIMARY KEY ([COD_COTACAO]),
    CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO),
    CONSTRAINT [FK_FORNECEDOR] FOREIGN KEY ([COD_FORNECEDOR]) REFERENCES FORNECEDOR(COD_FORNECEDOR)
  
);
CREATE UNIQUE INDEX [IPK_COTACAO] ON [COTACAO]([COD_COTACAO]);

CREATE TABLE [ITEM_PEDIDO_VENDA]
(
    [COD_ITEM_PEDIDO_VENDA] INTEGER  NOT NULL,
    [QTD_ITEM_PEDIDO_VENDA] FLOAT(15,2)  NOT NULL,
    [COD_PEDIDO_VENDA] INTEGER  NOT NULL,
    [COD_PRODUTO] INTEGER  NOT NULL,
    CONSTRAINT [PK_ITEM_PEDIDO_VENDA] PRIMARY KEY ([COD_ITEM_PEDIDO_VENDA]),
    CONSTRAINT [FK_COD_PEDIDO_VENDA] FOREIGN KEY ([COD_PEDIDO_VENDA]) REFERENCES PEDIDO_VENDA(COD_PEDIDO_VENDA),
    CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO)
  
);
CREATE UNIQUE INDEX [IPK_ITEM_PEDIDO_VENDA] ON [ITEM_PEDIDO_VENDA]([COD_ITEM_PEDIDO_VENDA]);

CREATE TABLE [ITEM_PEDIDO_COMPRA]
(
    [COD_ITEM_PEDIDO_COMPRA] INTEGER  NOT NULL,
    [QTD_ITEM_PEDIDO_COMPRA] FLOAT(15,2)  NOT NULL,
    [COD_PRODUTO] INTEGER  NOT NULL,
    [COD_PEDIDO_COMPRA] INTEGER  NOT NULL,
    CONSTRAINT [PK_ITEM_PEDIDO_COMPRA] PRIMARY KEY ([COD_ITEM_PEDIDO_COMPRA]),
    CONSTRAINT [FK_COD_PEDIDO_COMPRA] FOREIGN KEY ([COD_PEDIDO_COMPRA]) REFERENCES PEDIDO_COMPRA(COD_PEDIDO_COMPRA),
    CONSTRAINT [FK_PRODUTO] FOREIGN KEY ([COD_PRODUTO]) REFERENCES PRODUTO(COD_PRODUTO)
  
);
CREATE UNIQUE INDEX [IPK_ITEM_PEDIDO_COMPRA] ON [ITEM_PEDIDO_COMPRA]([COD_ITEM_PEDIDO_COMPRA]);

CREATE TABLE [PEDIDO_COMPRA]
(
    [COD_PEDIDO_COMPRA] INTEGER  NOT NULL,
    [VLR_PEDIDO_COMPRA] FLOAT(15,2)  NOT NULL,
    [COD_FORNECEDOR] INTEGER  NOT NULL,
    CONSTRAINT [PK_PEDIDO_COMPRA] PRIMARY KEY ([COD_PEDIDO_COMPRA]),
    CONSTRAINT [FK_FORNECEDOR] FOREIGN KEY ([COD_FORNECEDOR]) REFERENCES FORNECEDOR(COD_FORNECEDOR)
);
CREATE UNIQUE INDEX [IPK_PEDIDO_COMPRA] ON [PEDIDO_COMPRA]([COD_PEDIDO_COMPRA]);

-- Inserindo um registro na tabela CLIENTE
INSERT INTO CLIENTE (COD_CLIENTE, NOME, TELEFONE, ENDERECO)
VALUES (3, 'JENNIFER', '31994533390', 'R. LK 161');  

-- Inserindo um registro na tabela CLIENTE
INSERT INTO CLIENTE (COD_CLIENTE, NOME, TELEFONE, ENDERECO)
VALUES (2, 'JOYCE', '31998755541', 'R. LU 11');

-- Inserindo um registro na tabela VENDEDOR
INSERT INTO VENDEDOR (COD_VENDEDOR, NOME, TELEFONE, ENDERECO)
VALUES (1, 'ANA', '31999999999', 'R. AB 16');

-- Inserindo um registro na tabela VENDEDOR
INSERT INTO VENDEDOR (COD_VENDEDOR, NOME, TELEFONE, ENDERECO)
VALUES (2, 'LEO', '31999777999', 'R. AC 516');

-- Inserindo um registro na tabela FORNECEDOR
INSERT INTO FORNECEDOR (COD_FORNECEDOR, NOME, TELEFONE, ENDERECO)
VALUES (1, 'DAVI', '31997444541', 'R. EU 71');

-- Inserindo um registro na tabela FORNECEDOR
INSERT INTO FORNECEDOR (COD_FORNECEDOR, NOME, TELEFONE, ENDERECO)
VALUES (2, 'ELIZA', '31978444541', 'R. TATU 89');

-- Inserindo um registro na tabela TIPO_PRODUTO
INSERT INTO TIPO_PRODUTO (COD_TIPO_PRODUTO, DES_TIPO_PRODUTO)
VALUES (1, 'PIZZAS');

-- Inserindo um registro na tabela TIPO_PRODUTO
INSERT INTO TIPO_PRODUTO (COD_TIPO_PRODUTO, DES_TIPO_PRODUTO)
VALUES (2, 'BEBIDAS');

-- Inserindo um registro na tabela PRODUTO
INSERT INTO PRODUTO (COD_PRODUTO, NOME, VLR_PRODUTO_COMPRA, VLR_PRODUTO_VENDA, COD_TIPO_PRODUTO)
VALUES (1, 'PIZZA DE FRANGO', 50.00, 70.00, 1);

-- Inserindo um registro na tabela PRODUTO
INSERT INTO PRODUTO (COD_PRODUTO, NOME, VLR_PRODUTO_COMPRA, VLR_PRODUTO_VENDA, COD_TIPO_PRODUTO)
VALUES (2, 'COCA-COLA', 5.00, 9.00, 2);
select * from PRODUTO
-- Inserindo um registro na tabela COTAÇÃO
INSERT INTO COTACAO (COD_COTACAO, VLR_COTACAO, UNIDADE_MEDIDA, COD_PRODUTO, COD_FORNECEDOR)
VALUES (1, 50.00, 'KG', 1, 1);

-- Inserindo um registro na tabela COTAÇÃO
INSERT INTO COTACAO (COD_COTACAO, VLR_COTACAO, UNIDADE_MEDIDA, COD_PRODUTO, COD_FORNECEDOR)
VALUES (2, 75.00, 'LITROS', 2, 2);

-- Inserindo um registro na tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, DES_FORMA_PAGAMENTO)
VALUES (1, 'CRÉDITO');

-- Inserindo um registro na tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, DES_FORMA_PAGAMENTO)
VALUES (2, 'DÉBITO');

-- Inserindo um registro na tabela FORMA_PAGAMENTO
INSERT INTO FORMA_PAGAMENTO (COD_FORMA_PAGAMENTO, DES_FORMA_PAGAMENTO)
VALUES (3, 'DINHEIRO');

-- Inserindo um registro na tabela SITUAÇÃO_PEDIDO
INSERT INTO SITUACAO_PEDIDO (COD_SITUACAO_PEDIDO, STATUS_PEDIDO, STATUS_PAGAMENTO)
VALUES (1, 'PREPARANDO', 'PAGO');

-- Inserindo um registro na tabela SITUAÇÃO_PEDIDO
INSERT INTO SITUACAO_PEDIDO (COD_SITUACAO_PEDIDO, STATUS_PEDIDO, STATUS_PAGAMENTO)
VALUES (2, 'ENTREGUE', 'PAGO');

-- Inserindo um registro na tabela SITUAÇÃO_PEDIDO
INSERT INTO SITUACAO_PEDIDO (COD_SITUACAO_PEDIDO, STATUS_PEDIDO, STATUS_PAGAMENTO)
VALUES (3, 'CANCELADO', 'REEMBOLSO');

-- Inserindo um registro na tabela ITEM_PEDIDO_COMPRA
INSERT INTO ITEM_PEDIDO_COMPRA (COD_ITEM_PEDIDO_COMPRA, QTD_ITEM_PEDIDO_COMPRA, COD_PRODUTO, COD_PEDIDO_COMPRA)
VALUES (1, 10, 2, 1);

-- Inserindo um registro na tabela ITEM_PEDIDO_COMPRA
INSERT INTO ITEM_PEDIDO_COMPRA (COD_ITEM_PEDIDO_COMPRA, QTD_ITEM_PEDIDO_COMPRA, COD_PRODUTO, COD_PEDIDO_COMPRA)
VALUES (2, 100, 2, 1);

-- Inserindo um registro na tabela ITEM_PEDIDO_VENDA
INSERT INTO ITEM_PEDIDO_VENDA (COD_ITEM_PEDIDO_VENDA, QTD_ITEM_PEDIDO_VENDA, COD_PEDIDO_VENDA,  COD_PRODUTO)
VALUES (1, 10, 2, 1);

-- Inserindo um registro na tabela ITEM_PEDIDO_VENDA
INSERT INTO ITEM_PEDIDO_VENDA (COD_ITEM_PEDIDO_VENDA, QTD_ITEM_PEDIDO_VENDA, COD_PEDIDO_VENDA,  COD_PRODUTO)
VALUES (2, 5, 1, 1);

-- Inserindo um registro na tabela PEDIDO_COMPRA
INSERT INTO PEDIDO_COMPRA (COD_PEDIDO_COMPRA, VLR_PEDIDO_COMPRA, COD_FORNECEDOR)
VALUES (1, 1000.00, 1);

-- Inserindo um registro na tabela PEDIDO_COMPRA
INSERT INTO PEDIDO_COMPRA (COD_PEDIDO_COMPRA, VLR_PEDIDO_COMPRA, COD_FORNECEDOR)
VALUES (2, 525.00, 2);

-- Inserindo um registro na tabela PEDIDO_VENDA
INSERT INTO PEDIDO_VENDA (COD_PEDIDO_VENDA, DATA_PEDIDO, VLR_PEDIDO_VENDA, COD_VENDEDOR, COD_CLIENTE, COD_SITUACAO_PEDIDO, COD_FORMA_PAGAMENTO)
VALUES (7, '2023-25-10 27:00:00', 100.50, 1, 2, 1, 3);

-- Inserindo um registro na tabela PEDIDO_VENDA
INSERT INTO PEDIDO_VENDA (COD_PEDIDO_VENDA, DATA_PEDIDO, VLR_PEDIDO_VENDA, COD_VENDEDOR, COD_CLIENTE, COD_SITUACAO_PEDIDO, COD_FORMA_PAGAMENTO)
VALUES (2, '2023-27-10 27:00:00', 180.75, 2, 2, 1, 2);


-- SELECT DE UMA INFORMAÇÃO DE CADA TABELA
SELECT * FROM CLIENTE WHERE COD_CLIENTE LIKE '%3';
SELECT * FROM VENDEDOR WHERE NOME LIKE 'ANA%';
SELECT * FROM FORNECEDOR WHERE NOME LIKE '%D%';
SELECT * FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO LIKE '1';
SELECT * FROM COTACAO WHERE VLR_COTACAO LIKE 50.00;
SELECT * FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO LIKE '2';
SELECT * FROM SITUACAO_PEDIDO WHERE COD_SITUACAO_PEDIDO LIKE '3';
SELECT * FROM ITEM_PEDIDO_COMPRA WHERE COD_ITEM_PEDIDO_COMPRA LIKE '1';
SELECT * FROM ITEM_PEDIDO_VENDA WHERE COD_ITEM_PEDIDO_VENDA LIKE '1';
SELECT * FROM PEDIDO_COMPRA WHERE COD_PEDIDO_COMPRA LIKE '1';
SELECT * FROM PEDIDO_VENDA WHERE COD_PEDIDO_VENDA LIKE '1';

select * from CLIENTE c 
-- UPDATE DE UMA INFORMAÇÃO DE CADA TABELA
UPDATE CLIENTE SET NOME = 'FLAVIA' WHERE COD_CLIENTE  = 1;
UPDATE VENDEDOR SET NOME = 'ANA PAULA' WHERE COD_VENDEDOR = 1;
UPDATE FORNECEDOR SET NOME = 'JOÃO' WHERE COD_FORNECEDOR  = 1;
UPDATE TIPO_PRODUTO SET DES_TIPO_PRODUTO = 'MASSAS' WHERE COD_TIPO_PRODUTO = 1;
UPDATE COTACAO SET VLR_COTACAO = 200 WHERE COD_COTACAO = 1;
UPDATE FORMA_PAGAMENTO SET DES_FORMA_PAGAMENTO = 'CRÉDITO A VISTA' WHERE COD_FORMA_PAGAMENTO = 1;
UPDATE SITUACAO_PEDIDO SET STATUS_PEDIDO= 'DEVOLVIDO' WHERE COD_SITUACAO_PEDIDO = 3;
UPDATE ITEM_PEDIDO_COMPRA SET QTD_ITEM_PEDIDO_COMPRA= 300 WHERE COD_ITEM_PEDIDO_COMPRA = 1;
UPDATE ITEM_PEDIDO_VENDA SET QTD_ITEM_PEDIDO_VENDA = 400 WHERE COD_ITEM_PEDIDO_VENDA = 1;
UPDATE PEDIDO_COMPRA SET VLR_PEDIDO_COMPRA = 79.90 WHERE COD_PEDIDO_COMPRA = 1;
UPDATE PEDIDO_VENDA SET VLR_PEDIDO_VENDA = 159.95 WHERE COD_PEDIDO_VENDA = 1;


select * from cliente
-- DELETE DE UMA INFORMAÇÃO DE CADA TABELA
DELETE FROM CLIENTE WHERE COD_CLIENTE  = 2;
DELETE FROM VENDEDOR WHERE COD_VENDEDOR = 2;
DELETE FROM FORNECEDOR WHERE COD_FORNECEDOR = 2;
DELETE FROM TIPO_PRODUTO WHERE COD_TIPO_PRODUTO = 2;
DELETE FROM COTACAO WHERE COD_COTACAO = 1;
DELETE FROM FORMA_PAGAMENTO WHERE COD_FORMA_PAGAMENTO = 2;
DELETE FROM SITUACAO_PEDIDO WHERE COD_SITUACAO_PEDIDO = 1;
DELETE FROM ITEM_PEDIDO_COMPRA WHERE COD_ITEM_PEDIDO_COMPRA = 1;
DELETE FROM ITEM_PEDIDO_VENDA WHERE COD_ITEM_PEDIDO_VENDA = 1;
DELETE FROM PEDIDO_COMPRA WHERE COD_PEDIDO_COMPRA = 1;
DELETE FROM PEDIDO_VENDA WHERE COD_PEDIDO_VENDA = 1;


select * from PEDIDO_VENDA PV

-- INNER JOIN
-- 0 - QUERO RECUPERAR TODOS OS PEDIDOS FEITOS NA PIZZARIA ATÉ O MOMENTO
SELECT PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS NOME_CLIENTE, 
V.NOME AS NOME_VENDEDOR, FP.DES_FORMA_PAGAMENTO, P.NOME AS NOME_PRODUTO, 
TP.DES_TIPO_PRODUTO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO
INNER JOIN ITEM_PEDIDO_VENDA IPV ON IPV.COD_PEDIDO_VENDA = PV.COD_PEDIDO_VENDA
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO;

-- 1 - QUERO BUSCAR TODOS OS FORNECEDORES CADASTRADOS X PRODUTOS COMPRADOS
SELECT PC.VLR_PEDIDO_COMPRA, F.NOME AS NOME_FORNECEDOR,
P.VLR_PRODUTO_COMPRA, P.NOME AS NOME_PRODUTO
FROM PEDIDO_COMPRA pc
INNER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = PC.COD_FORNECEDOR
INNER JOIN ITEM_PEDIDO_COMPRA IPC ON IPC.COD_PEDIDO_COMPRA = PC.COD_PEDIDO_COMPRA
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPC.COD_PRODUTO;

-- 2 - QUERO TODAS AS COTAÇÕES REALIZADAS
SELECT C.VLR_COTACAO, F.NOME AS NOME_FORNECEDOR, P.NOME AS NOME_PRODUTO
FROM COTACAO C
INNER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = C.COD_FORNECEDOR
INNER JOIN PRODUTO P ON P.COD_PRODUTO = C.COD_PRODUTO;

select * from PRODUTO p 

-- 3 - QUERO TODOS OS PRODUTOS VENDIDOS
SELECT IPV. COD_PRODUTO, P.NOME AS NOME_PRODUTO, QTD_ITEM_PEDIDO_VENDA
FROM ITEM_PEDIDO_VENDA IPV
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO;

-- 4 - QUERO TODAS AS SITUAÇÕES DOS PEDIDOS DE VENDAS
SELECT PV.COD_PEDIDO_VENDA, PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS
NOME_CLIENTE, SP.STATUS_PEDIDO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON PV.COD_CLIENTE = C.COD_CLIENTE
INNER JOIN SITUACAO_PEDIDO SP ON PV.COD_SITUACAO_PEDIDO = SP.COD_SITUACAO_PEDIDO;

-- 5 - QUERO TODAS AS COTAÇÕES REALIZADAS COM UNIDADE DE MEDIDA
SELECT C.VLR_COTACAO, C.UNIDADE_MEDIDA, F.NOME AS NOME_FORNECEDOR
FROM COTACAO C
INNER JOIN FORNECEDOR F ON C.COD_FORNECEDOR = F.COD_FORNECEDOR;

-- LEFT JOIN
-- 0 - QUERO TRAZER TODOS OS VENNDEDORES CADASTRADOS
SELECT V.NOME AS NOME_VENDEDOR, PV.COD_PEDIDO_VENDA, PV.DATA_PEDIDO
FROM VENDEDOR V
LEFT JOIN PEDIDO_VENDA PV ON V.COD_VENDEDOR = PV.COD_VENDEDOR;

-- RIGHT OUTER JOIN
-- 1 - QUERO BUSCAR TODOS OS FORNECEDORES CADASTRADOS MESMO SEM COMPRAS REALIZADAS
SELECT PC.VLR_PEDIDO_COMPRA, F.NOME AS NOME_FORNECEDOR,
P.VLR_PRODUTO_COMPRA, P.NOME AS NOME_PRODUTO
FROM PEDIDO_COMPRA pc
RIGHT OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = PC.COD_FORNECEDOR
RIGHT OUTER JOIN ITEM_PEDIDO_COMPRA IPC ON IPC.COD_PEDIDO_COMPRA =
PC.COD_PEDIDO_COMPRA
RIGHT OUTER JOIN PRODUTO P ON P.COD_PRODUTO = IPC.COD_PRODUTO;

-- 2 - QUERO TODAS AS COTAÇÕES REALIZADAS MESMO SEM SEREM EFETIVADAS
SELECT C.VLR_COTACAO, F.NOME AS NOME_FORNECEDOR, P.NOME AS NOME_PRODUTO
FROM COTACAO C
RIGHT OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = C.COD_FORNECEDOR
RIGHT OUTER JOIN PRODUTO P ON P.COD_PRODUTO = C.COD_PRODUTO;

-- 3 - QUERO TODOS OS PEDIDOS DE VENDAS MESMO SEM VENDEDOR CADASTRADO
SELECT V.NOME AS NOME_VENDEDOR, PV.COD_PEDIDO_VENDA, PV.DATA_PEDIDO
FROM PEDIDO_VENDA PV
RIGHT JOIN VENDEDOR V ON PV.COD_VENDEDOR = V.COD_VENDEDOR;

--FULL OUTER JOIN
-- 1 - QUERO BUSCAR TODOS OS FORNECEDORES CADASTRADOS COM TODOS OS PEDIDOS DE COMPRA
SELECT PC.VLR_PEDIDO_COMPRA, F.NOME AS NOME_FORNECEDOR,
P.VLR_PRODUTO_COMPRA, P.NOME AS NOME_PRODUTO
FROM PEDIDO_COMPRA pc
FULL OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = PC.COD_FORNECEDOR
FULL OUTER JOIN ITEM_PEDIDO_COMPRA IPC ON IPC.COD_PEDIDO_COMPRA =
PC.COD_PEDIDO_COMPRA
FULL OUTER JOIN PRODUTO P ON P.COD_PRODUTO = IPC.COD_PRODUTO;

-- 2 - QUERO TODAS AS COTAÇÕES REALIZADAS COM TODOS OS PRODUTOS
SELECT C.VLR_COTACAO, F.NOME AS NOME_FORNECEDOR, P.NOME AS NOME_PRODUTO
FROM COTACAO C
FULL OUTER JOIN FORNECEDOR F ON F.COD_FORNECEDOR = C.COD_FORNECEDOR
FULL OUTER JOIN PRODUTO P ON P.COD_PRODUTO = C.COD_PRODUTO;

-- Exemplo Order By 1
SELECT PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS NOME_CLIENTE, 
V.NOME AS NOME_VENDEDOR, FP.DES_FORMA_PAGAMENTO, P.NOME AS NOME_PRODUTO, 
TP.DES_TIPO_PRODUTO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
INNER JOIN ITEM_PEDIDO_VENDA IPV ON IPV.COD_PEDIDO_VENDA = PV.COD_PEDIDO_VENDA
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY PV.VLR_PEDIDO_VENDA DESC;

-- Exemplo Order By 2
SELECT PV.DATA_PEDIDO, PV.VLR_PEDIDO_VENDA, C.NOME AS NOME_CLIENTE, 
V.NOME AS NOME_VENDEDOR, FP.DES_FORMA_PAGAMENTO, P.NOME AS NOME_PRODUTO, 
TP.DES_TIPO_PRODUTO
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
INNER JOIN ITEM_PEDIDO_VENDA IPV ON IPV.COD_PEDIDO_VENDA = PV.COD_PEDIDO_VENDA
INNER JOIN PRODUTO P ON P.COD_PRODUTO = IPV.COD_PRODUTO
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
ORDER BY P.NOME ASC;

-- Exemplo Group By 1
SELECT FP.DES_FORMA_PAGAMENTO, SUM(PV.VLR_PEDIDO_VENDA) AS TOTAL_VENDAS
FROM PEDIDO_VENDA PV
INNER JOIN FORMA_PAGAMENTO FP ON FP.COD_FORMA_PAGAMENTO = PV.COD_FORMA_PAGAMENTO
GROUP BY FP.DES_FORMA_PAGAMENTO;

-- Exemplo Group By 2
SELECT TP.DES_TIPO_PRODUTO, COUNT(P.COD_PRODUTO) AS TOTAL_PRODUTOS
FROM PRODUTO P
INNER JOIN TIPO_PRODUTO TP ON TP.COD_TIPO_PRODUTO = P.COD_TIPO_PRODUTO
GROUP BY TP.DES_TIPO_PRODUTO;

-- QUERO RECUPERAR A QUANTIDADE DE PEDIDOS E O SOMATÓRIO DO VALOR GASTO POR TODOS OS CLIENTES DA PIZZARIA
SELECT C.COD_CLIENTE, C.NOME AS NOME_CLIENTE, 
COUNT(PV.COD_PEDIDO_VENDA) AS QTD_PEDIDOS_CLIENTE, 
SUM(PV.VLR_PEDIDO_VENDA) AS VALOR_GASTO_CLIENTE
FROM PEDIDO_VENDA PV
INNER JOIN CLIENTE C ON C.COD_CLIENTE = PV.COD_CLIENTE 
GROUP BY PV.COD_CLIENTE
ORDER BY PV.VLR_PEDIDO_VENDA ASC

-- QUERO RECUPERAR OS VENDEDORES QUE MAIS VENDERAM PIZZA
SELECT V.COD_VENDEDOR, V.NOME AS NOME_VENDEDOR, 
COUNT(PV.COD_PEDIDO_VENDA) AS QTD_PEDIDOS_ATENDIDOS,
SUM(PV.VLR_PEDIDO_VENDA) AS VALOR_TOTAL_VENDIDO
FROM PEDIDO_VENDA PV
INNER JOIN VENDEDOR V ON V.COD_VENDEDOR = PV.COD_VENDEDOR 
WHERE PV.DATA_PEDIDO BETWEEN '2023-01-01 00:00:00' AND '2023-31-12 00:00:00'
GROUP BY V.COD_VENDEDOR
ORDER BY QTD_PEDIDOS_ATENDIDOS DESC

-- QUERO SABER O CUSTO TOTAL E O VALOR TOTAL DE VENDA PELA DATA (MARGEM DE LUCRO) 
-- EXEMPLO DE SUB-QUERY
SELECT SUM(PV.VLR_PEDIDO_VENDA) AS SOMA_DE_VENDAS,
(SELECT SUM(PC.VLR_PEDIDO_COMPRA) AS SOMA_DE_GASTOS FROM PEDIDO_COMPRA PC) 
AS SOMA_DE_COMPRAS
FROM PEDIDO_VENDA PV;
